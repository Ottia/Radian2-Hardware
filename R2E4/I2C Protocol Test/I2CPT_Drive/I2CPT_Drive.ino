// I2CPT_Command
/*
 * Test Script for Protocol Which Transmits Motor Data found on Digital Inputs
 * over I2C.
 * For this test, the command chip (SCU) is not just transmitting the commands
 * but its also creating them with the AccelStepper library. In implementation,
 * these commands will be generated by grbl in the CPU (Arm Cortex).
*/

#include <Wire.h>
#include <EEPROM.h>

// Prefix for the Bus these Pods are Connected To:
#define POD_ID  632

// Step Signal (Command Output/Input Pins):
#define STP_O 6
// Direction Signal:
#define DIR_O 8
// Enable Signal:
#define EN_O 10

void setup(){
  mot_id =
  Wire.begin(mot_id);
  Wire.onReceive(receiveEvent);

  pinMode(STP_O, OUTPUT);
  pinMode(DIR_O, OUTPUT);
  pinMode(EN_O, OUTPUT);

  delay(100);
}

void loop(){

}

// Sends a Command to the Motor where the command, comm, is one byte where:
//  bit 0 -> STEP
//  bit 1 -> DIRECTION
//  bit 2 -> ENABLE
//  bit 3 -> if comm=111 -> set ID to next byte; else, requesting information.
void commandMotor(comm){

} // #commandMotor
